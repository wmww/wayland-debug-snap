name: wayland-debug
version: git
summary: Wayland debugging toolkit
description: |
  wayland-debug is a command line tool that can be used to view Wayland messages with syntax
  highlighting, filter them, even set breakpoints on specific messages (when run as a GDB plugin)
license: MIT
base: core20
confinement: classic
grade: stable

parts:
  wayland-debug:
    plugin: dump
    source: https://github.com/wmww/wayland-debug.git
    prime:
      - -**/.github
      - -**/test
      - -**/.gitignore
      - -**/libwayland_debug_logs
      - -**/update-protocols.sh
    # python3 dependency is provided by the core20 base

  libffi:
    # By compiling a custom libffi we can force it to be statically linked
    plugin: autotools
    source: https://github.com/libffi/libffi.git
    source-tag: v3.4.2 # Keep up to date with the latest
    build-packages:
      - libltdl-dev
      - texinfo
    autotools-configure-parameters: [--disable-shared, --enable-static, CFLAGS='-fPIC']

  libwayland:
    after: [libffi]
    plugin: meson
    source: https://gitlab.freedesktop.org/wayland/wayland.git
    source-tag: 1.20.0 # Keep up to date with the latest
    build-packages:
      - debhelper
      - libexpat1-dev
      - pkg-config
    meson-parameters: [-Dtests=false, -Ddocumentation=false, -Ddtd_validation=false]
    override-build: |
      snapcraftctl build
      SOURCE="$SNAPCRAFT_PART_INSTALL/usr/local/lib/$SNAPCRAFT_ARCH_TRIPLET"
      TARGET="$SNAPCRAFT_PART_INSTALL/resources/wayland/build/src"
      mkdir -p "$TARGET"
      find "$SOURCE/" -name 'libwayland-client*' -or -name 'libwayland-server*' | xargs -I {} mv {} "$TARGET"
      rm -Rf $SNAPCRAFT_PART_INSTALL/usr/
    build-attributes:
      # Our libwayland will be dynamically linked to by a system binary, so we need to use the
      # system libc. This is fragile, but seems to generally work at least on distros not older than
      # the snap base (Ubuntu 20.04)
      - no-patchelf

apps:
  wayland-debug:
    command: main.py
